<UserControl x:Class="POS.WPF.Views.Sections.ProductForm"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:Behaviors="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:conv="clr-namespace:POS.WPF.Converters"
             xmlns:val="clr-namespace:POS.WPF.Validators.TypeValidators"
             xmlns:local="clr-namespace:POS.WPF.Views.Sections"
             mc:Ignorable="d"
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <conv:IntegerConverter x:Key="IntegerConverter"/>
        <conv:RadioConverter x:Key="RadioConverter"/>
    </UserControl.Resources>
    <Behaviors:Interaction.Triggers>
        <Behaviors:EventTrigger EventName="Loaded" SourceName="FormGrid">
            <Behaviors:InvokeCommandAction Command="{Binding LoadOptionsCmd}"/>
        </Behaviors:EventTrigger>
    </Behaviors:Interaction.Triggers>
    <Grid Margin="20 10">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <Grid x:Name="FormGrid" Grid.Row="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <GroupBox Header="Product Details" Grid.Column="0" Margin="0 0 5 0"
                      Style="{StaticResource MaterialDesignGroupBox}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>

                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <ComboBox Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" Margin="10"
                                  materialDesign:HintAssist.Hint="Category"  
                                  materialDesign:TextFieldAssist.HasClearButton="True"
                                  Style="{StaticResource MaterialDesignFloatingHintComboBox}"
                                  SelectedValue="{Binding CurrentProduct.CategoryId}"
                                  SelectedValuePath="Id"
                                  ItemsSource="{Binding CategoryList}">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Name}"/>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>

                    <TextBox Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" materialDesign:HintAssist.Hint="Code" Style="{StaticResource MaterialDesignFloatingHintTextBox}" Margin="10">
                        <TextBox.Text>
                            <Binding Path="CurrentProduct.Code" UpdateSourceTrigger="PropertyChanged"/>
                        </TextBox.Text>
                    </TextBox>

                    <StackPanel Orientation="Horizontal" Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2" Margin="10 10 10 0">
                        <RadioButton Style="{StaticResource MaterialDesignRadioButton}" Tag="True"
                                     IsChecked="{Binding Path=CurrentProduct.CodeStatus, Converter={StaticResource RadioConverter}, ConverterParameter=HasCode }">
                            <TextBlock Text="Has Code"/>
                        </RadioButton>
                        <RadioButton Style="{StaticResource MaterialDesignRadioButton}" Tag="True" Margin="15 0"
                                     IsChecked="{Binding Path=CurrentProduct.CodeStatus, Converter={StaticResource RadioConverter}, ConverterParameter=NewCode }">
                            <TextBlock Text="New Code"/>
                        </RadioButton>
                        <RadioButton Style="{StaticResource MaterialDesignRadioButton}" Tag="True"
                                     IsChecked="{Binding Path=CurrentProduct.CodeStatus, Converter={StaticResource RadioConverter}, ConverterParameter=NoCode }">
                            <TextBlock Text="No Code"/>
                        </RadioButton>
                    </StackPanel>

                    <TextBox Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="2" materialDesign:HintAssist.Hint="Product Name" Style="{StaticResource MaterialDesignFloatingHintTextBox}" Margin="10">
                        <TextBox.Text>
                            <Binding Path="CurrentProduct.Name" UpdateSourceTrigger="PropertyChanged"/>
                        </TextBox.Text>
                    </TextBox>

                    <TextBox Grid.Row="4" Grid.Column="0" Grid.ColumnSpan="2" materialDesign:HintAssist.Hint="Initial Quantity" Style="{StaticResource MaterialDesignFloatingHintTextBox}" Margin="10">
                        <TextBox.Text>
                            <Binding Path="CurrentProduct.InitialQuantity" UpdateSourceTrigger="PropertyChanged" TargetNullValue="">
                                <Binding.ValidationRules>
                                    <val:IntegerValidator/>
                                </Binding.ValidationRules>
                                <Binding.Converter>
                                    <conv:IntegerConverter/>
                                </Binding.Converter>
                            </Binding>
                        </TextBox.Text>
                    </TextBox>

                    <TextBox Grid.Row="5" Grid.Column="0" Grid.ColumnSpan="2" materialDesign:HintAssist.Hint="Purchase Price" Style="{StaticResource MaterialDesignFloatingHintTextBox}" Margin="10">
                        <TextBox.Text>
                            <Binding Path="CurrentProduct.Cost" UpdateSourceTrigger="PropertyChanged" TargetNullValue="">
                                <Binding.ValidationRules>
                                    <val:IntegerValidator/>
                                </Binding.ValidationRules>
                                <Binding.Converter>
                                    <conv:IntegerConverter/>
                                </Binding.Converter>
                            </Binding>
                        </TextBox.Text>
                    </TextBox>

                    <TextBox Grid.Row="6" Grid.Column="0" materialDesign:HintAssist.Hint="Sale Price" Style="{StaticResource MaterialDesignFloatingHintTextBox}" Margin="10">
                        <TextBox.Text>
                            <Binding Path="CurrentProduct.Price" UpdateSourceTrigger="PropertyChanged" TargetNullValue="">
                                <Binding.ValidationRules>
                                    <val:IntegerValidator/>
                                </Binding.ValidationRules>
                                <Binding.Converter>
                                    <conv:IntegerConverter/>
                                </Binding.Converter>
                            </Binding>
                        </TextBox.Text>
                    </TextBox>

                    <TextBox Grid.Row="6" Grid.Column="2" materialDesign:HintAssist.Hint="Pure Income" Style="{StaticResource MaterialDesignFloatingHintTextBox}" Margin="10" IsReadOnly="True">
                        <TextBox.Text>
                            <Binding Path="CurrentProduct.Profit" UpdateSourceTrigger="PropertyChanged" Mode="OneWay">
                                <Binding.Converter>
                                    <conv:IntegerConverter/>
                                </Binding.Converter>
                            </Binding>
                        </TextBox.Text>
                    </TextBox>
                </Grid>
            </GroupBox>
            <GroupBox Header="More Details" Margin="5 0 0 0" Grid.Column="1"
                          Style="{StaticResource MaterialDesignGroupBox}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <ComboBox Grid.Row="0" Grid.Column="0" Margin="10"
                                  materialDesign:HintAssist.Hint="Currency"  
                                  materialDesign:TextFieldAssist.HasClearButton="True"
                                  Style="{StaticResource MaterialDesignFloatingHintComboBox}"
                                  SelectedValue="{Binding CurrentProduct.CurrencyId}"
                                  SelectedValuePath="Id"
                                  ItemsSource="{Binding CurrencyList}">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Name}"/>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>

                    <ComboBox Grid.Row="1" Grid.Column="0" Margin="10"
                                  materialDesign:HintAssist.Hint="Unit"
                                  materialDesign:TextFieldAssist.HasClearButton="True"
                                  Style="{StaticResource MaterialDesignFloatingHintComboBox}"
                                  SelectedValue="{Binding CurrentProduct.UnitId}"
                                  SelectedValuePath="Id"
                                  ItemsSource="{Binding UnitList}">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Name}"/>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>

                    <ComboBox Grid.Row="2" Grid.Column="0" Margin="10"
                                  materialDesign:HintAssist.Hint="Brand"  
                                  materialDesign:TextFieldAssist.HasClearButton="True"
                                  Style="{StaticResource MaterialDesignFloatingHintComboBox}"
                                  SelectedValue="{Binding CurrentProduct.BrandId}"
                                  SelectedValuePath="Id"
                                  ItemsSource="{Binding BrandList}">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Name}"/>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>

                    <TextBox Grid.Row="3" Grid.Column="0" materialDesign:HintAssist.Hint="Alert Quantity" Style="{StaticResource MaterialDesignFloatingHintTextBox}" Margin="10">
                        <TextBox.Text>
                            <Binding Path="CurrentProduct.AlertQuantity" UpdateSourceTrigger="PropertyChanged" TargetNullValue="">
                                <Binding.ValidationRules>
                                    <val:IntegerValidator/>
                                </Binding.ValidationRules>
                                <Binding.Converter>
                                    <conv:IntegerConverter/>
                                </Binding.Converter>
                            </Binding>
                        </TextBox.Text>
                    </TextBox>

                    <TextBox Grid.Row="4" Grid.Column="0" materialDesign:HintAssist.Hint="Discount" Style="{StaticResource MaterialDesignFloatingHintTextBox}" Margin="10">
                        <TextBox.Text>
                            <Binding Path="CurrentProduct.Discount" UpdateSourceTrigger="PropertyChanged" TargetNullValue="">
                                <Binding.ValidationRules>
                                    <val:IntegerValidator/>
                                </Binding.ValidationRules>
                                <Binding.Converter>
                                    <conv:IntegerConverter/>
                                </Binding.Converter>
                            </Binding>
                        </TextBox.Text>
                    </TextBox>

                    <DatePicker Grid.Row="5" Grid.Column="0" materialDesign:HintAssist.Hint="Expiry Date" Style="{StaticResource MaterialDesignFloatingHintDatePicker}" Margin="10">
                        <DatePicker.SelectedDate>
                            <Binding Path="CurrentProduct.ExpiryDate" UpdateSourceTrigger="PropertyChanged"/>
                        </DatePicker.SelectedDate>
                    </DatePicker>

                    <TextBox Grid.Row="6" Grid.Column="0" materialDesign:HintAssist.Hint="Note" Style="{StaticResource MaterialDesignFloatingHintTextBox}" Margin="10" AcceptsReturn="True">
                        <TextBox.Text>
                            <Binding Path="CurrentProduct.Note" UpdateSourceTrigger="PropertyChanged"/>
                        </TextBox.Text>
                    </TextBox>
                </Grid>
            </GroupBox>
        </Grid>
        
        <StackPanel Grid.Row="1" Orientation="Horizontal" HorizontalAlignment="Right" Margin="0 15">
            <Button Margin="10 0"
                    Command="{Binding SaveCmd}"
                    HorizontalAlignment="Right" VerticalAlignment="Bottom">Save</Button>
            <Button Margin="0"
                    Command="{Binding CancelCmd}"
                    HorizontalAlignment="Right" VerticalAlignment="Bottom">Cancel</Button>
        </StackPanel>
    </Grid>
</UserControl>
